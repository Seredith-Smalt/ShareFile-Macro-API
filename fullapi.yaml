# this the outline of the ShareFIle Macro API.
swagger: '2.0'
info:
  title: Cloud Services API
  description: v3 API
  version: "3.0.1"
# the domain of the service
host: services-api.cloud.com:8443
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /
produces:
  - application/json
parameters:
  Authorization:
    name: Authorization
    in: header
    description: Bearer authorization token
    required: false
    type: string
  Cookie:
    name: Cookie
    in: header
    description: Cookie information returned on previous request (with syntax 'Ado=xxx...xxx;path=/;domain=.ddns.net')
    required: false
    type: string
  code:
    name: code
    in: query
    description: Request code (requires subdomain)
    required: false
    type: string
  subdomain:
    name: subdomain
    in: query
    description: Subdomain of sharefile account (used with request code or username/password)
    required: false
    type: string
  username:
    name: username
    in: query
    description: User name (requires subdomain and password)
    required: false
    type: string
  password:
    name: password
    in: query
    description: Password (requires subdomain and username)
    required: false
    type: string
paths:
  /files/{File}:
    post:
      summary: Upload a file
      description: Upload a file to target folder (for example into path /files/My Files & Folders/new.txt or /files/fo0678ac-aaaa-aaaa-bbbb-ffffffffffff/new.txt).  The file contents are either passed in the body or referred to by some remote URL.
      consumes:
        - text/plain
      parameters:
        - name: File
          in: path
          description: Unique file name in folder path or folder id
          required: true
          type: string
        - name: url
          in: query
          description: Remote URL of a file to be used as the source of this new file
          required: false
          type: string
        - name:	body
          in: body
          description: Contents of the file to be uploaded
          required: false
          schema:
            type: string
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Files
      responses:
        200:
          description: Returns file metadata
          schema:
            $ref: '#/definitions/Files'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Get a file
      description: This endpoint allows you to retrieve files as well as file metadata
      parameters:
        - name: File
          in: path
          description: Unique file / folder ID or path
          required: true
          type: string
        - name: metadata
          in: query
          description: Retrieve only file metadata instead of contents (default is true for folders and false for files)
          required: false
          type: boolean
          format: boolean
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Files
      responses:
        200:
          description: A download link for a file or file metadata
          schema:
            $ref: '#/definitions/Files'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: Update file metadata
      description: Using this endpoint you can update the information about a file
      parameters:
        - name: File
          in: path
          description: This can either be a unique id or a path to the file
          required: true
          type: string
        - name: name
          in: query
          description: Unique file / folder ID or path
          required: false
          type: string
        - name: fileName
          in: query
          description: Update display name of file
          required: false
          type: string
        - name: description
          in: query
          description: Update description of the file
          required: false
          type: string
        - name: parentIdentifier
          in: query
          description: Change location of file by providing new parent folder
          required: false
          type: string
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Files
      responses:
        200:
          description: Returns file metadata
          schema:
            $ref: '#/definitions/Files'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete file 
      description: Remove a file from ShareFile
      parameters:
        - name: File
          in: path
          description: Unique file / folder ID or path
          required: true
          type: string
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Files
      responses:
        200:
          description: OK
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /files/:
    get:
      summary: Get a list of files in root directory
      description: This endpoint allows you to retrieve root file list
      parameters:
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Files
      responses:
        200:
          description: Returns a nested list of file metadata
          schema:
            $ref: '#/definitions/Files'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /shares/{FileIdentifier}/:
    post:
      summary: Create a new share to either send or receive files    
      description: Shares allows sharefile users to give access to files and folders to other users. Shares are used to "Send" or "Request" files to anonymous or named users, without giving the target direct access to the user folders.Shares contain policies - such as expiration, maximum number of downloads, authentication options.
      operationId: addShare
      parameters:
        - name: Share
          in: body
          description: Share information
          required: true
          schema:
            $ref: '#/definitions/Shares'
        - name: FileIdentifier
          in: path
          description: This is the unique id of the file or folder to share
          required: true
          type: string
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Shares
      responses:
        200:
          description: Share information
          schema:
            $ref: '#/definitions/Shares'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /shares/:
    get:
      summary: Get all shares for a user
      description: Retrieve all shares that have been create by the authenticated user
      parameters:
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Shares
      responses:
        200:
          description: Share information
          schema:
            $ref: '#/definitions/Shares'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /shares/{ShareIdentifier}:
    get:
      summary: Get share information of a specific share
      description: Retrieve a specific share by its identifier
      parameters:
        - name: ShareIdentifier
          in: path
          description: This is the unique id of the share
          required: true
          type: string
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Shares
      responses:
        200:
          description: Share information
          schema:
            $ref: '#/definitions/Shares'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: Update share
      description: Update a share to either send or receive files
      parameters:
        - name: ShareIdentifier
          in: path
          description: Unique identifier of the share
          required: true
          type: string
        - name: Share
          in: body
          description: Share information
          required: true
          schema:
            $ref: '#/definitions/Shares'
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Shares
      responses:
        200:
          description: Share information
          schema:
            $ref: '#/definitions/Shares'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete share 
      description: Remove a share from ShareFile
      parameters:
        - name: ShareIdentifier
          in: path
          description: Unique identifier for the share
          required: true
          type: string
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Shares
      responses:
        200:
          description: OK
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /shares/{ShareIdentifier}/Recipients/:
    get:
      summary: Get recipients of a share
      description: Retrieve the list of Recipients in the share. Recipients represent the target users of the Share, containing access information, such as number of times that user downloaded files from the share. Each Recipient is identified by an Alias, which is an unique ID given to each user - allowing tracking of downloads for non-authenticated users.
      parameters:
        - name: ShareIdentifier
          in: path
          description: This is the unique id of the share
          required: true
          type: string
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Shares
      responses:
        200:
          description: Share information
          schema:
            $ref: '#/definitions/Recipients'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Add a recipient to a share
      description: Creates a recipient user for a share that requires user information
      parameters:
        - name: ShareIdentifier
          in: path
          description: This is the unique id of the share
          required: true
          type: string
        - name: Recipient
          in: body
          description: User Information
          required: true
          schema:
            $ref: '#/definitions/Recipients'
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Shares
      responses:
        200:
          description: Share information
          schema:
            $ref: '#/definitions/Recipients'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /shares/{ShareIdentifier}/Items/:
    get:
      summary: Get list of items of a share
      description: Retrieve the list of Items (files and folders) in the Send Share.
      parameters:
        - name: ShareIdentifier
          in: path
          description: This is the unique id of the share
          required: true
          type: string
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Shares
      responses:
        200:
          description: Share information
          schema:
            $ref: '#/definitions/Items'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /shares/{ShareIdentifier}/Download/:
    get:
      summary: Download items of a share
      description: Downloads items from the Share. The default action will download all Items in the Share. If a Share has a single item, the download attachment name will use the item name. Otherwise, the download will contain a ZIP archive containing all files and folders in the share, named Files.zip.
      
        To download Shares that require authentication, make sure this request is authenticated. To download shares that require require user information, provide the Name, Email and Company parameters in the URI query. Anyone can download files from anonymous shares.
        
        You can also download individual Items in the Share. Use the Share(id)/Items(id)/Download action. The item ID must be a top-level item in the Share - i.e., you cannot download or address files contained inside a shared folder.
      parameters:
        - name: ShareIdentifier
          in: path
          description: This is the unique id of the share
          required: true
          type: string
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Shares
      responses:
        200:
          description: Share information
          schema:
            $ref: '#/definitions/Items'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/:
    get:
      summary: With the users endpoint you can add and modify users and their capabilities
      description: Get list of users based on type
      parameters:
        - name: userType
          in: query
          type: string
          description: Client or employee user or none to get all
          required: false
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Users
      responses:
        200:
          description: Information for the given user
          schema:
            $ref: '#/definitions/Users'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create user
      description: Create a new user
      parameters:
        - name: Users
          in: body
          description: User information
          required: true
          schema:
            $ref: '#/definitions/Users'
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Users
      responses:
        200:
          description: Information about the given user
          schema:
            $ref: '#/definitions/Users'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/{UserIdentifier}:
    get:
      summary: User information
      description: The user endpoint returns data about a user
      parameters:
        - name: UserIdentifier
          in: path
          type: string
          description: User id is the unique identifier for a user
          required: true
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Users
      responses:
        200:
          description: Information about the given user
          schema:
            $ref: '#/definitions/Users'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: Update user
      description: Update a user
      parameters:
        - name: UserIdentifier
          in: path
          description: Unique identifier for the user
          required: true
          type: string
        - name: User
          in: body
          description: User information
          required: true
          schema:
            $ref: '#/definitions/Users'
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Users
      responses:
        200:
          description: Information about the given user
          schema:
            $ref: '#/definitions/Users'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete user 
      description: |
        Remove a user from ShareFile
      parameters:
        - name: UserIdentifier
          in: path
          description: Unique identifier for the user
          required: true
          type: string
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Users
      responses:
        200:
          description: OK
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/{UserIdentifier}/permissions/:
    get:
      summary: Get permissions
      description: View full list of permissions
      parameters:
        - name: UserIdentifier
          in: path
          description: Unique identifier for the user
          required: true
          type: string
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Users
      responses:
        200:
          description: User permission information
          schema:
            $ref: '#/definitions/UserPermissions'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post: 
      summary: Create permissions
      description: Create new permissions for the user
      parameters:
        - name: UserIdentifier
          in: path
          description: Unique identifier for the user
          required: true
          type: string
        - name: UserPermission
          in: body
          description: User Permission Information
          required: true
          schema:
            $ref: '#/definitions/UserPermissions'
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Users
      responses:
        200:
          description: User permission information
          schema:
            $ref: '#/definitions/UserPermissions'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      
    patch:
      summary: Add permissions
      description: Add a permission to the user
      parameters:
        - name: UserIdentifier
          in: path
          description: Unique identifier for the user
          required: true
          type: string
        - name: UserPermission
          in: body
          description: User Permission Information
          required: true
          schema:
            $ref: '#/definitions/UserPermissions'
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Users
      responses:
        200:
          description: User permission information
          schema:
            $ref: '#/definitions/UserPermissions'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Remove permissions
      description: Take away permissions from specific user
      parameters:
        - name: UserIdentifier
          in: path
          description: Unique Identifier for the user
          required: true
          type: string
        - name: UserPermissions
          in: body
          description: User Permission Information
          required: true
          schema:
            $ref: '#/definitions/UserPermissions'
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Users
      responses:
        200:
          description: User permission information
          schema:
            $ref: '#/definitions/UserPermissions'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /groups/:
    get:
      description: Groups make it easy to assign permissions to files and folders.  Instead of having to create a new access control for each user you can create it for the group and then add the user to the group.
      summary: Retrieves all distribution groups this user has permissions to view in this account
      parameters:
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Groups
      responses:
        200:
          description: Group information
          schema:
            type: array
            items:
              $ref: '#/definitions/Groups'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a new group
      description: Creates a new group. The Post query must include the specification of the group.
      parameters:
        - name: Contacts
          in: query
          required: true
          description: List of user ids or email addresses to add to group 
          type: array
          items: 
            type: string
        - name: Name
          in: query
          required: true
          description: Name of group
          type: string
        - name: IsShared
          in: query
          required: false
          type: boolean
          description: Is the group shared
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Groups
      responses:
        200:
          description: Group information
          schema:
            $ref: '#/definitions/Groups'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /groups/{GroupIdentifier}:
    get:
      summary: Get a specific group 
      description: Retrieves a single Group by id
      parameters:
        - name: GroupIdentifier
          in: path
          required: true
          type: string
          description: Unique indentifier of the group
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Groups
      responses:
        200:
          description: Group information
          schema:
            $ref: '#/definitions/Groups'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: Update a specific group
      description: Updates an existing group. This operation will ignore the provided clients list. Use the \Contacts navigation link to add/remove elements from a group
      parameters:
        - name: GroupIdentifier
          in: path
          required: true
          description: Unique identifier of group
          type: string
        - name: Name
          in: query
          required: true
          description: Name of group
          type: string
        - name: IsShared
          in: query
          required: false
          type: boolean
          description: Is the group shared
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Groups
      responses:
        200:
          description: Group information
          schema:
            $ref: '#/definitions/Groups'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete group 
      description: Remove a group from ShareFile
      parameters:
        - name: GroupIdentifier
          in: path
          description: Unique identifier for the group
          required: true
          type: string
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Groups
      responses:
        200:
          description: OK
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /groups/{GroupIdentifier}/contacts/:
    get:
      summary: Get a list of contacts for a specific group
      description: Retrieves the contacts of a group
      parameters:
        - name: GroupIdentifier
          in: path
          required: true
          type: string
          description: Unique indentifier of the group
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Groups
      responses:
        200:
          description: Contact information
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Add a list of contacts to group
      description: Adds a list of contacts to a group. The contact list may contain either contact ID (same as User ID) or Email.
      parameters:
        - name: GroupIdentifier
          in: path
          required: true
          type: string
          description: Unique indentifier of the group
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Groups
      responses:
        200:
          description: Group information
          schema:
            $ref: '#/definitions/Groups'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Remove contacts from group
      description: Remove contacts from group
      parameters:
        - name: GroupIdentifier
          in: path
          required: true
          type: string
          description: Unique indentifier of the group
        - name: Contacts
          in: query
          description: User id or email address [{"Email":"user.one@domain.com"},{"Id":"abcd"}] 
          required: true
          type: array
          items:
            type: string
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Groups
      responses:
        200:
          description: Group information
          schema:
            $ref: '#/definitions/Groups'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /items/{ItemIdentifier}/accesscontrols/:
    get:
      description: AccessControls define the rights and options of a Principal to a given Item AccessControls define a set of rights - such as CanUpload, CanDownload, CanView - as well as a set of options - such as NotifyOnUpload - that applies to a given Principal (user) and Item (folder). In ShareFile, Access Controls are only associated with Folders. Access Controls can be inherited on Children Folders, or Children can override the list of the Parent. The ACLs are not additive - either the Child uses the list of the Parent, or it defines a new list.
      summary: Retrieves the access control list for a given item.
      parameters:
        - name: ItemIdentifier
          in: path
          type: string
          required: true
          description: Unique identifier for the file or folder
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - AccessControls
      responses:
        200:
          description: AccessControl information
          schema:
              $ref: '#/definitions/AccessControls'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create access control for item
      description: Creates a new Access Controls entry for a given Item. Access controls can only define a single Principal, which can be either a Group or User. The 'Principal' element is specified as an object - you should populate either the URL or the ID reference.
      parameters:
        - name: ItemIdentifier
          in: path
          type: string
          description: File or folder identifier access control should be attached to
          required: true
        - name: Principal
          in: query
          type: string
          description: Principal - user or group - that has been granted permissions through this rule
          required: true
        - name: CanUpload
          in: query
          type: boolean
          description: Defines whether the principal can add files (upload) into the Item
          required: false
        - name: CanDownload
          in: query
          type: boolean 
          description: Defines whether the principal can read file content (download) from this Item
          required: false
        - name: CanView    
          in: query
          type: boolean 
          description:  Defines whether the principal can view items (browse) from this Item
          required: false
        - name: CanDelete
          in: query
          type: boolean 
          description:  Defines whether the principal can remove items from this Item
          required: false
        - name: CanManagePermissions  
          in: query
          type: boolean 
          description: Defines whether the principal can configure Access Controls in this Item
          required: false
        - name: NotifyOnUpload   
          in: query
          type: boolean
          description: Defines the notification preference for upload events. If set, the principal will receive notifications when new files are uploaded into this Item
          required: false
        - name: NotifyOnDownload      
          in: query
          type: boolean 
          description:  Defines the notification preference for download events. If set, the principal will receive notifiation when items are downloaded from this Item.
          required: false
        - name: IsOwner
          in: query
          type: boolean 
          description: Defines whether the principal is the owner of this Item
          required: false
        - name: recursive
          in: query
          type: boolean
          description: Indicates whether the operation applies to sub-folders of this item. Default is "false", only the target object is modified
          required: false
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - AccessControls
      responses:
        200:
          description: AccessControl information
          schema:
            $ref: '#/definitions/AccessControls'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: Update access control for item
      description: Updates an existing Access Controls of a given Item. The Principal element cannot be modified, it is provided in the query to identity the AccessControl element to be modified. You can provide an ID, Email or URL on the Principal object.
      parameters:
        - name: ItemIdentifier
          in: path
          type: string
          description: File or folder identifier access control should be attached to
          required: true
        - name: Principal
          in: query
          type: string
          description: Principal - user or group - that has been granted permissions through this rule
          required: true
        - name: CanUpload
          in: query
          type: boolean
          description: Defines whether the principal can add files (upload) into the Item
          required: false
        - name: CanDownload
          in: query
          type: boolean 
          description: Defines whether the principal can read file content (download) from this Item
          required: false
        - name: CanView    
          in: query
          type: boolean 
          description:  Defines whether the principal can view items (browse) from this Item
          required: false
        - name: CanDelete
          in: query
          type: boolean 
          description:  Defines whether the principal can remove items from this Item
          required: false
        - name: CanManagePermissions  
          in: query
          type: boolean 
          description: Defines whether the principal can configure Access Controls in this Item
          required: false
        - name: NotifyOnUpload   
          in: query
          type: boolean
          description: Defines the notification preference for upload events. If set, the principal will receive notifications when new files are uploaded into this Item
          required: false
        - name: NotifyOnDownload      
          in: query
          type: boolean 
          description:  Defines the notification preference for download events. If set, the principal will receive notifiation when items are downloaded from this Item.
          required: false
        - name: IsOwner
          in: query
          type: boolean 
          description: Defines whether the principal is the owner of this Item
          required: false
        - name: recursive
          in: query
          type: boolean
          description: Indicates whether the operation applies to sub-folders of this item. Default is "false", only the target object is modified
          required: false
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - AccessControls
      responses:
        200:
          description: AccessControl information
          schema:
            $ref: '#/definitions/AccessControls'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /accesscontrols/{PrincipalIdentifier}/{ItemIdentifier}:
    get:
      summary: Permissions on files 
      description: Retrieves a single access control entry for a given item and principal
      parameters:
        - name: PrincipalIdentifier
          in: path
          type: string
          required: true
          description: Unique identifier for the user or group
        - name: ItemIdentifier
          in: path
          type: string
          required: true
          description: unique identifier for the file or folder
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - AccessControls
      responses:
        200:
          description: AccessControl information
          schema:
            $ref: '#/definitions/AccessControls'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete access control from item
      description: |
        Remove a Folder from ShareFile
      parameters:
        - name: PrincipalIdentifier
          in: path
          type: string
          required: true
          description: Unique identifier for the user or group
        - name: ItemIdentifier
          in: path
          type: string
          required: true
          description: Unique identifier for the file or folder
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - AccessControls
      responses:
        200:
          description: OK
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /accesscontrols/clone/:
    post:
      summary: Clone access controls for users
      description: Recursively clones multiple access controls for a multiple users
      parameters:  
        - name: FolderIdentifier
          in: query
          type: string
          required: true
          description: Unique identifier for the folder
        - name: UserIdentifier
          in: query
          type: string
          required: true
          description: Unique identifier for the user
        - name: CloneUserIdentifiers
          in: query
          type: array
          items: 
            type: string
          required: true
          description: Array of user ids to clone the access control for
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - AccessControls
      responses:
        200:
          description: AccessControl information
          schema:
            $ref: '#/definitions/AccessControls'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'   
            
  /entity/{EntityName}:
    get:
      summary: entity allow you to create a simple JSON database.  Simply post the json data to an entity name of your choosing and it will create a new table where you can get, create, update and delete json data 
      description: Gets all entity with given entity name
      parameters:
        - name: EntityName
          in: path
          type: string
          description: Unique name for the entity
          required: true
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Entity
      responses:
        200:
          description: List of entity that were inserted into the table
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create New entity
      description: Adds entity to table or creates a new table if none exists
      parameters:
        - name: EntityName
          in: path
          description: Unique name for the entity
          required: true
          type: string
        - name: jsonData
          in: body
          description: JSON data - you can use any JSON format you would like here - "jsonData" is just a place holder
          schema:
            type: string
          required: true
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Entity
      responses:
        200:
          description: Id for the new entry is returned as well as entity count
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /entity/{EntityName}/{EntityIdentifier}/:
    get:
      summary: Get specific entity
      description: Get a specific entity by id
      parameters:
        - name: EntityName
          in: path
          description: Unique name for the entity
          required: true
          type: string
        - name: EntityIdentifier
          in: path
          description: Unique Identifier for the entity
          required: true
          type: string
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Entity
      responses:
        200:
          description: entity JSON information
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: Modify a specific entity
      description: Pass in any additional parameters for the entity by id, new properties will be added and properties of the same name will be overwritten
      parameters:
        - name: EntityName
          in: path
          description: Unique name for the entity
          required: true
          type: string
        - name: EntityIdentifier
          in: path
          description: Unqiue Identifier for the entity 
          required: true
          type: string
        - name: jsonData
          in: body
          description: JSON data - you can use any JSON format you would like here - "jsonData" is just a place holder
          required: true
          schema:
            type: string
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Entity
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Remove specific entity from database
      description: Removes the entity data from the table
      parameters:
        - name: EntityName
          in: path
          description: Unique name for the entity
          required: true
          type: string
        - name: EntityIdentifier
          in: path
          description: Unique Identifier for the entity
          required: true
          type: string
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Entity
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /entity/{EntityName}/{EntityIdentifier}/{PropertyName}:
    get:
      summary: Get specific property on an entity
      description: Get a specific property for an entity by id
      parameters:
        - name: EntityName
          in: path
          description: Unique name for the entity
          required: true
          type: string
        - name: EntityIdentifier
          in: path
          description: Unique Identifier for the entity
          required: true
          type: string
        - name: PropertyName
          in: path
          description: Unique name for the entity Property
          required: true
          type: string
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Entity
      responses:
        200:
          description: entity JSON information
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: Modify a specific entity property
      description: Creates or updates JSON data on the property.  Property stores a full JSON entity instead of a simple string.  If you only want to modify the property as a string use the PATCH /entity/{entityName}/{entityIdentifier} endpoint
      parameters:
        - name: EntityName
          in: path
          description: Unique name for the entity
          required: true
          type: string
        - name: EntityIdentifier
          in: path
          description: Unqiue Identifier for the entity 
          required: true
          type: string
        - name: PropertyName
          in: path
          description: Unique name for the entity Property
          required: true
          type: string
        - name: jsonData
          in: body
          description: JSON data - you can use any JSON format you would like here - "jsonData" is just a place holder
          required: true
          schema:
            type: string
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Entity
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Remove specific property from the entity
      description: Removes the entity property
      parameters:
        - name: EntityName
          in: path
          description: Unique name for the entity
          required: true
          type: string
        - name: EntityIdentifier
          in: path
          description: Unique Identifier for the entity
          required: true
          type: string
        - name: PropertyName
          in: path
          description: Unique name for the entity Property
          required: true
          type: string
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/Cookie'
        - $ref: '#/parameters/code'
        - $ref: '#/parameters/subdomain'
        - $ref: '#/parameters/username'
        - $ref: '#/parameters/password'
      tags:
        - Entity
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /space/:
    post:
      summary: Create Space
      description: Add a new space to an organization
      operationId: addSpace
      parameters:
        - name: Space
          in: body
          description: Space Information
          required: true
          schema:
            $ref: '#/definitions/Space'
      tags:
        - Space
      responses:
        200:
          description: Space Information
          schema:
            $ref: '#/definitions/Space'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /space/{SpaceIdentifier}:
    get:
      summary: Get Space Information
      description: Get the space with the given id
      parameters:
        - name: SpaceIdentifier
          in: path
          description: this is the unique id of the space
          required: true
          type: string
      tags:
        - Space
      responses:
        200:
          description: Space Information
          schema:
            $ref: '#/definitions/Space'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update Space
      description: Updates the space with the given id
      parameters:
        - name: SpaceIdentifier
          in: path
          description: unique identifier of the space
          required: true
          type: string
        - name: Space
          in: body
          description: Space Information
          required: true
          schema:
            $ref: '#/definitions/Space'
      tags:
        - Space
      responses:
        200:
          description: Space Information
          schema:
            $ref: '#/definitions/Space'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete Space 
      description: Deletes the space with the given id. This will also end all memberships of the space and cancel any space invites still outstanding.
      parameters:
        - name: SpaceIdentifier
          in: path
          description: unique identifier for the space
          required: true
          type: string
      tags:
        - Space
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /space/{SpaceIdentifier}/restore/:
    post:
      summary: Restore an archived workspace
      description: Restores an archived workspace. This unhides it from navigation, but doesn't do anything other than that.
      parameters:
        - name: SpaceIdentifier
          in: path
          description: this is the unique id of the space
          required: true
          type: string
      tags:
        - Space
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /space/{SpaceIdentifier}/archive/:
    get:
      summary: Archives the workspace.
      description: Archives the workspace. This hides it from navigation, but doesn't do anything other than that.
      parameters:
        - name: SpaceIdentifier
          in: path
          description: this is the unique id of the space
          required: true
          type: string
      tags:
        - Space
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /space/{SpaceIdentifier}/available/:
    get:
      summary: Returns the available seats
      description: Returns the available seats. A null value means there is an unlimited number of available seats.
      parameters:
        - name: SpaceIdentifier
          in: path
          description: this is the unique id of the space
          required: true
          type: string
      tags:
        - Space
      responses:
        200:
          description: Space Information
          schema:
            $ref: '#/definitions/Space'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /space/org/{OrgIdentifier}/:
    get:
      summary: Returns the workspaces in the organization.
      description: Returns the workspaces in the organization that are accesible for the active user.
      parameters:
        - name: OrgIdentifier
          in: path
          description: this is the unique id of the organization
          required: true
          type: string
      tags:
        - Space
      responses:
        200:
          description: Space Information
          schema:
            $ref: '#/definitions/Space'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /space/org/{OrgIdentifier}/available/:
    get:
      summary: Returns the available spaces
      description: Returns the available seats. A null value means there is an unlimited number of available seats.
      parameters:
        - name: OrgIdentifier
          in: path
          description: this is the unique id of the organization
          required: true
          type: string
      tags:
        - Space
      responses:
        200:
          description: Space Information
          schema:
            $ref: '#/definitions/Space'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /app/:
    get:
      summary: Get all app Information
      description: Get the app with the given id
      parameters:
        - name: exclude_app_ids
          in: query
          description: The comma separated list of app_ids to exclude from the returned list.
          required: false
          type: string
        - name: exclude_demo
          in: query
          description: If apps from demo workspace should be excluded,
          required: false
          type: string
        - name: limit
          in: query
          description: The maximum number of apps to return Default 4
          required: false
          type: string
        - name: order
          in: query
          description: The order to return the apps in - "score" Order by the  score of the app for the active user "name" Order by the name of the app
          required: false
          type: string
        - name: referenceable_in_org
          in: query
          description: ID of the Organization to filter apps by. Returns only apps the user can reference in that Organization.
          required: false
          type: string
        - name: right
          in: query
          description: The right the user must have on the returned apps.
          required: false
          type: string
        - name: target_space_id
          in: query
          description: The id of the space we prefer the apps to come from. This will usually be the users current workspace.
          required: false
          type: string
        - name: text
          in: query
          description: Any search term that should either match the name of the app, the name of items in the app or the name of the workspace the app is in.
          required: false
          type: string
      tags:
        - App
      responses:
        200:
          description: Application Information
          schema:
            $ref: '#/definitions/application'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create app
      description: Add a new app to an organization
      operationId: addapp
      parameters:
        - name: app
          in: body
          description: app Information
          required: true
          schema:
            $ref: '#/definitions/application'
      tags:
        - App
      responses:
        200:
          description: app Information
          schema:
            $ref: '#/definitions/application'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /app/{AppIdentifier}:
    get:
      summary: Get app Information
      description: Gets the definition of an app and can include configuration and fields. This method will always return the latest revision of the app definition.
      parameters:
        - name: AppIdentifier
          in: path
          description: this is the unique id of the app
          required: true
          type: string
      tags:
        - App
      responses:
        200:
          description: app Information
          schema:
            $ref: '#/definitions/application'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update app
      description: Updates an app. The update can contain an new configuration for the app, addition of new fields as well as updates to the configuration of existing fields. Fields not included will not be deleted. To delete a field use the "delete field" operation. When adding/updating/deleting apps and fields, it can be simpler to only update the app config here and add/update/remove fields using the field/{field_id} sub resource.
      parameters:
        - name: AppIdentifier
          in: path
          description: unique identifier of the app
          required: true
          type: string
        - name: app
          in: body
          description: app Information
          required: true
          schema:
            $ref: '#/definitions/application'
      tags:
        - App
      responses:
        200:
          description: app Information
          schema:
            $ref: '#/definitions/application'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete app 
      description: Deletes the app with the given id. This will delete all items, widgets, filters and shares on the app. This operation is not reversible.
      parameters:
        - name: AppIdentifier
          in: path
          description: unique identifier for the app
          required: true
          type: string
      tags:
        - App
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /app/{AppIdentifier}/activate/:
    post:
      summary: Activates a deactivated app. 
      description: Activates a deactivated app. This puts the app back in the app navigator and allows insertion of new items.
      parameters:
        - name: AppIdentifier
          in: path
          description: this is the unique id of the app
          required: true
          type: string
      tags:
        - App
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /app/{AppIdentifier}/deactivate/:
    post:
      summary: Deactivates an app. 
      description: Deactivates the app with the given id. This removes the app from the app navigator, and disables insertion of new items.
      parameters:
        - name: AppIdentifier
          in: path
          description: this is the unique id of the app
          required: true
          type: string
      tags:
        - App
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /app/{AppIdentifier}/install/:
    post:
      summary: Installs the app with the given id on the space.
      description: Installs the app with the given id on the space.
      parameters:
        - name: AppIdentifier
          in: path
          description: this is the unique id of the app
          required: true
          type: string
        - name: spaceIdentifier
          in: query
          description: this is the unique id of the space where the app should be installed
          required: true
          type: string
      tags:
        - App
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /app/{AppIdentifier}/field/:
    post:
      summary: Adds a new field to an app
      description: Adds a new field to an app
      parameters:
        - name: AppIdentifier
          in: path
          description: this is the unique id of the app
          required: true
          type: string
        - name: field
          in: body
          description: app Information
          required: true
          schema:
            $ref: '#/definitions/Fields'
      tags:
        - App
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /app/{AppIdentifier}/field/{FieldIdentifier}:
    get:
      summary: Returns a single field from an app. 
      description: Returns a single field from an app. 
      parameters:
        - name: AppIdentifier
          in: path
          description: this is the unique id of the app
          required: true
          type: string
        - name: FieldIdentifier
          in: path
          description: this is the unique id of the field
          required: true
          type: string
      tags:
        - App
      responses:
        200:
          description: app Information
          schema:
            $ref: '#/definitions/application'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update an app field
      description: Updates the configuration of an app field. The type of the field cannot be updated, only the configuration.
      parameters:
        - name: AppIdentifier
          in: path
          description: this is the unique id of the app
          required: true
          type: string
        - name: FieldIdentifier
          in: path
          description: this is the unique id of the field
          required: true
          type: string
        - name: field
          in: body
          description: field Information
          required: true
          schema:
            $ref: '#/definitions/Fields'
      tags:
        - App
      responses:
        200:
          description: app Information
          schema:
            $ref: '#/definitions/application'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Deletes a field on an app.
      description: Deletes a field on an app. When deleting a field any new items and updates to existing items will not have this field present. For existing items, the field will still be presented when viewing the item.
      parameters:
        - name: AppIdentifier
          in: path
          description: this is the unique id of the app
          required: true
          type: string
        - name: FieldIdentifier
          in: path
          description: this is the unique id of the field
          required: true
          type: string
      tags:
        - App
      responses:
        200:
          description: app Information
          schema:
            $ref: '#/definitions/application'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /app/{AppIdentifier}/dependencies/:
    get:
      summary: Returns the apps that the given app depends on.
      description: Returns the apps that the given app depends on.
      parameters:
        - name: AppIdentifier
          in: path
          description: this is the unique id of the app
          required: true
          type: string
      tags:
        - App
      responses:
        200:
          description: app Information
          schema:
            $ref: '#/definitions/application'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /app/space/{SpaceIdentifier}/:
    get:
      summary: Returns all the apps on the space that are visible.
      description: Returns all the apps on the space that are visible. The apps are sorted by any custom ordering and else by name.
      parameters:
        - name: SpaceIdentifier
          in: path
          description: this is the unique id of the space
          required: true
          type: string
      tags:
        - App
      responses:
        200:
          description: app Information
          schema:
            $ref: '#/definitions/application'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /app/features/:
    get:
      summary: Returns the features that the given apps and optionally space includes. 
      description: Returns the features that the given apps and optionally space includes. 
      parameters:
        - name: appIdentifiers
          in: query
          description: A comma-separated list of app ids from which the features should be extracted
          required: true
          type: string
        - name: includeSpace
          in: query
          description: If features from the containing space should be included
          required: false
          type: string
      tags:
        - App
      responses:
        200:
          description: app Information
          schema:
            $ref: '#/definitions/application'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /app/top/:
    get:
      summary: Returns the top apps for the active user. This is the apps that the user have interacted with the most.
      description: Returns the top apps for the active user. This is the apps that the user have interacted with the most.
      parameters:
        - name: excludeDemo
          in: query
          description: If apps from demo workspace should be excluded
          required: false
          type: boolean
        - name: limit
          in: query
          description: The maximum number of apps to return Default  4
          required: false
          type: boolean
      tags:
        - App
      responses:
        200:
          description: app Information
          schema:
            $ref: '#/definitions/application'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'    
  /space/{SpaceIdentifier}/dependencies/:
    get:
      summary: Returns all the active apps on the space along with their dependencies.
      description: Returns all the active apps on the space along with their dependencies. The dependencies are only one level deep.
      parameters:
        - name: SpaceIdentifier
          in: path
          description: this is the unique id of the space
          required: true
          type: string
      tags:
        - App
      responses:
        200:
          description: app Information
          schema:
            $ref: '#/definitions/application'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /app/org/{OrgIdentifier}/top/:
    get:
      summary: Returns the top apps for the user inside the given organization
      description: Returns the top apps for the user inside the given organization
      parameters:
        - name: OrgIdentifier
          in: path
          description: this is the unique id of the organization
          required: true
          type: string
      tags:
        - App
      responses:
        200:
          description: app Information
          schema:
            $ref: '#/definitions/application'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /comment/:
    post:
      summary: Create comment
      description: Add a new comment to an organization
      operationId: addcomment
      parameters:
        - name: comment
          in: body
          description: comment Information
          required: true
          schema:
            $ref: '#/definitions/comment'
      tags:
        - Comment
      responses:
        200:
          description: comment Information
          schema:
            $ref: '#/definitions/comment'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /comment/{CommentIdentifier}:
    get:
      summary: Get comment Information
      description: Get the comment with the given id. It is not possible to see where the comment was made, only the comment itself.
      parameters:
        - name: CommentIdentifier
          in: path
          description: this is the unique id of the comment
          required: true
          type: string
      tags:
        - Comment
      responses:
        200:
          description: comment Information
          schema:
            $ref: '#/definitions/comment'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update comment
      description: Updates the comment with the given id This should only be used to correct spelling and grammatical mistakes in the comment.
      parameters:
        - name: CommentIdentifier
          in: path
          description: unique identifier of the comment
          required: true
          type: string
        - name: comment
          in: body
          description: comment Information
          required: true
          schema:
            $ref: '#/definitions/comment'
      tags:
        - Comment
      responses:
        200:
          description: comment Information
          schema:
            $ref: '#/definitions/comment'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete comment 
      description: Deletes the comment with the given id. This can be used to retract a comment that was made and which the user regrets.
      parameters:
        - name: CommentIdentifier
          in: path
          description: unique identifier for the comment
          required: true
          type: string
      tags:
        - Comment
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /comment/{CommentIdentifier}/revision/:
    post:
      summary: Returns all revisions on a comment
      description: Returns all the revisions on the given comment, including the current revision. Revisions are returned with the oldest first.
      parameters:
        - name: CommentIdentifier
          in: path
          description: this is the unique id of the comment
          required: true
          type: string
      tags:
        - Comment
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /comment/{ObjectType}/{ObjectIdentifier}/:
    get:
      summary: Retrieves the comments that have been made on an object
      description: Used to retrieve the comments that have been made on an object of the given type and with the given id. It returns a list of the comments sorted in ascending order by time created.
      parameters:
        - name: ObjectIdentifier
          in: path
          description: this is the unique id of the object
          required: true
          type: string
        - name: ObjectType
          in: path
          description: this is the type of object the comment is on
          required: true
          type: string
      tags:
        - Comment
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Add comment to object
      description: Adds a new comment to the object of the given type and id, f.ex. item 1.
      parameters:
        - name: ObjectIdentifier
          in: path
          description: this is the unique id of the object
          required: true
          type: string
        - name: ObjectType
          in: path
          description: this is the type of object the comment is on
          required: true
          type: string
      tags:
        - Comment
      responses:
        200:
          description: comment Information
          schema:
            $ref: '#/definitions/comment'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /hook/{RefType}/{RefIdentifier}:
    get:
      summary: Get hook Information
      description: Get the hook information on given reference 
      parameters:
        - name: RefType
          in: path
          description: reference type hook is attached to
          required: true
          type: string
        - name: RefIdentifier
          in: path
          description: reference id 
          required: true
          type: string
      tags:
        - Hook
      responses:
        200:
          description: hook Information
          schema:
            $ref: '#/definitions/hook'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create hook
      description: Create a new hook on the given object.
      operationId: addhook
      parameters:
        - name: RefType
          in: path
          description: reference type hook is attached to
          required: true
          type: string
        - name: RefIdentifier
          in: path
          description: reference id 
          required: true
          type: string
        - name: url
          in: query
          description: callback url for webhook
          required: true
          type: string
        - name: type
          in: query
          description: type of events to listen to
          required: true
          type: string
      tags:
        - Hook
      responses:
        200:
          description: hook Information
          schema:
            $ref: '#/definitions/hook'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /hook/{HookIdentifier}:
    delete:
      summary: Delete hook 
      description: Deletes the hook with the given id. 
      parameters:
        - name: HookIdentifier
          in: path
          description: unique identifier for the hook
          required: true
          type: string
      tags:
        - Hook
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /hook/{HookIdentifier}/verify/request:
    post:
      summary: Request the hook to be validated.
      description: Request the hook to be validated. This will cause the hook to send a request to the URL with the parameter "type" set to "hook.verify" and "code" set to the verification code. The endpoint must then call the validate method with the code to complete the verification.
      parameters:
        - name: HookIdentifier
          in: path
          description: this is the unique id of the hook
          required: true
          type: string
      tags:
        - Hook
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /hook/{HookIdentifier}/verify/validate:
    post:
      summary: Validate the webhook
      description: Validates the hook using the code received from the verify call. On successful validation the hook will become active.
      parameters:
        - name: HookIdentifier
          in: path
          description: this is the unique id of the hook
          required: true
          type: string
      tags:
        - Hook
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /object/app/{AppIdentifier}/:
    post:
      summary: Create object
      description: Add a new object to an organization
      operationId: addobject
      parameters:
        - name: AppIdentifier
          in: path
          description: unique id for the application
          required: true
          type: string
        - name: object
          in: body
          description: object Information
          required: true
          schema:
            $ref: '#/definitions/object'
      tags:
        - Object
      responses:
        200:
          description: object Information
          schema:
            $ref: '#/definitions/object'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /object/{ObjectIdentifier}:
    get:
      summary: Get object Information
      description: Get the object with the given id
      parameters:
        - name: ObjectIdentifier
          in: path
          description: this is the unique id of the object
          required: true
          type: string
      tags:
        - Object
      responses:
        200:
          description: object Information
          schema:
            $ref: '#/definitions/object'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update object
      description: Update an already existing object. Values will only be updated for fields included. To delete all values for a field supply an empty array as values for that field.
      parameters:
        - name: ObjectIdentifier
          in: path
          description: unique identifier of the object
          required: true
          type: string
        - name: object
          in: body
          description: object Information
          required: true
          schema:
            $ref: '#/definitions/object'
      tags:
        - Object
      responses:
        200:
          description: object Information
          schema:
            $ref: '#/definitions/object'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete object 
      description: Deletes an object and removes it from all views. The object can no longer be retrieved.
      parameters:
        - name: ObjectIdentifier
          in: path
          description: unique identifier for the object
          required: true
          type: string
      tags:
        - Object
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /object/app/{AppIdentifier}/delete/:
    post:
      summary: Bulk delete
      description: Deletes items from a given app based in bulk and removes them from all views. The data can no longer be retrieved.
      parameters:
        - name: AppIdentifier
          in: path
          description: this is the unique id of the application
          required: true
          type: string
      tags:
        - Object
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /object/{ObjectIdentifier}/clone/:
    get:
      summary: Archives the workobject.
      description: Archives the workobject. This hides it from navigation, but doesn't do anything other than that.
      parameters:
        - name: ObjectIdentifier
          in: path
          description: this is the unique id of the object
          required: true
          type: string
      tags:
        - Object
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /object/{ObjectIdentifier}/available/:
    get:
      summary: Returns the available seats
      description: Returns the available seats. A null value means there is an unlimited number of available seats.
      parameters:
        - name: ObjectIdentifier
          in: path
          description: this is the unique id of the object
          required: true
          type: string
      tags:
        - Object
      responses:
        200:
          description: object Information
          schema:
            $ref: '#/definitions/object'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /object/org/{OrgIdentifier}/:
    get:
      summary: Returns the workobjects in the organization.
      description: Returns the workobjects in the organization that are accesible for the active user.
      parameters:
        - name: OrgIdentifier
          in: path
          description: this is the unique id of the organization
          required: true
          type: string
      tags:
        - Object
      responses:
        200:
          description: object Information
          schema:
            $ref: '#/definitions/object'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /object/org/{OrgIdentifier}/available/:
    get:
      summary: Returns the available objects
      description: Returns the available seats. A null value means there is an unlimited number of available seats.
      parameters:
        - name: OrgIdentifier
          in: path
          description: this is the unique id of the organization
          required: true
          type: string
      tags:
        - Object
      responses:
        200:
          description: object Information
          schema:
            $ref: '#/definitions/object'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /search/:
    post:
      summary: Searches in all items, statuses, profiles, files, meetings and non-private tasks.
      description: Searches in all items, statuses, profiles, files, meetings and non-private tasks. The objects will be returned sorted descending by the time the object was created.
      operationId: addsearch
      parameters:
        - name: search_fields
          in: query
          description: The list of fields to search in. Can f.ex. be used to limit the search to the "title" field.
          required: true
          type: string
      tags:
        - Search
      responses:
        200:
          description: search Information
          schema:
            $ref: '#/definitions/search'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /search/v2/:
    get:
      summary: Searches in all conversations, profiles, statuses, items, files, and tasks. 
      description: Searches in all conversations, profiles, statuses, items, files, and tasks. The objects will be returned sorted descending by the time the object had any update.
      parameters:
        - name: counts
          in: query
          description: If the counts for each type of object should be returned.
          required: false
          type: string
        - name: highlights
          in: query
          description: If the highlights for each result should be returned
          required: false
          type: string
        - name: limit
          in: query
          description: The maximum number of results to return.  Default value 20
          required: false
          type: string
        - name: offset
          in: query
          description: The offset into the results to return. Default value 0
          required: false
          type: string
        - name: query
          in: query
          description: The text to search for.
          required: false
          type: string
        - name: ref_type
          in: query
          description: Restrict the search to objects of the given type. Can be "item", "task", "file", "conversation", "profile" and "app"
          required: true
          type: string
        - name: search_fields
          in: query
          description: The list of fields to search in. Can f.ex. be used to limit the search to the "title" field.
          required: true
          type: string
      tags:
        - Search
      responses:
        200:
          description: search Information
          schema:
            $ref: '#/definitions/search'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /search/app/{AppIdentifier}/:
    post:
      summary: Search in app
      description: Searches in all items and tasks in the app.
      parameters:
        - name: AppIdentifier
          in: path
          description: this is the unique id of the app
          required: true
          type: string
        - name: search_fields
          in: query
          description: The list of fields to search in. Can be used to limit the search to the "title" field.
          required: true
          type: string
      tags:
        - Search
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /search/app/{AppIdentifier}/v2/:
    get:
      summary: Search in app v2
      description: Searches in all items, files, and tasks in the application. The objects will be returned sorted descending by the time the object had any update.
      parameters:
        - name: AppIdentifier
          in: path
          description: this is the unique id of the app
          required: true
          type: string
        - name: counts
          in: query
          description: If the counts for each type of object should be returned.
          required: false
          type: string
        - name: highlights
          in: query
          description: If the highlights for each result should be returned
          required: false
          type: string
        - name: limit
          in: query
          description: The maximum number of results to return.  Default 20
          required: false
          type: string
        - name: offset
          in: query
          description: The offset into the results to return. Default  0
          required: false
          type: string
        - name: query
          in: query
          description: The text to search for.
          required: true
          type: string
        - name: ref_type
          in: query
          description: Restrict the search to objects of the given type. Can be "item", "task", "file", "conversation", "profile" and "app"
          required: true
          type: string
        - name: search_fields
          in: query
          description: The list of fields to search in. Can f.ex. be used to limit the search to the "title" field.
          required: true
          type: string
      tags:
        - Search
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /search/app/{AppIdentifier}/space/{SpaceIdentifier}:
    get:
      summary: Searches an app in a space
      description: Searches in all objects and tasks in the app and space.
      parameters:
        - name: AppIdentifier
          in: path
          description: this is the unique id of the app
          required: true
          type: string
        - name: SpaceIdentifier
          in: path
          description: this is the unique id of the space
          required: true
          type: string
        - name: counts
          in: query
          description: If the counts for each type of object should be returned. 
          required: false
          type: string
        - name: highlights
          in: query
          description: If the highlights for each result should be returned
          required: false
          type: string
        - name: limit
          in: query
          description: The maximum number of results to return.  Default  20
          required: false
          type: string
        - name: offset
          in: query
          description: The offset into the results to return. Default  0
          required: false
          type: string
        - name: query
          in: query
          description: The text to search for.
          required: true
          type: string
        - name: ref_type
          in: query
          description: Restrict the search to objects of the given type. Can be "item", "task", "file", "conversation", "profile" and "app"
          required: true
          type: string
        - name: search_fields
          in: query
          description: The list of fields to search in. Can f.ex. be used to limit the search to the "title" field.
          required: true
          type: string
      tags:
        - Search
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /search/org/{OrgIdentifier}/:
    post:
      summary: Searches in organization.
      description: Searches in all items, statuses and non-private tasks in the organization.
      parameters:
        - name: OrgIdentifier
          in: path
          description: this is the unique id of the organization
          required: true
          type: string
        - name: search_fields
          in: query
          description: The list of fields to search in. Can be used to limit the search to the "title" field.
          required: true
          type: string
      tags:
        - Search
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /search/org/{OrgIdentifier}/v2/:
    get:
      summary: Search in organization v2
      description: Searches in all items, statuses, files, profiles, apps and non-private tasks in the organization. The objects will be returned sorted descending by the time the object had any update.
      parameters:
        - name: OrgIdentifier
          in: path
          description: this is the unique id of the organization
          required: true
          type: string
        - name: counts
          in: query
          description: True if the counts for each type of object should be returned.
          required: false
          type: string
        - name: highlights
          in: query
          description: True if the highlights for each result should be returned
          required: false
          type: string
        - name: limit
          in: query
          description: The maximum number of results to return.  Default  20
          required: false
          type: string
        - name: offset
          in: query
          description: The offset into the results to return. Default  0
          required: false
          type: string
        - name: query
          in: query
          description: The text to search for.
          required: true
          type: string
        - name: ref_type
          in: query
          description: Restrict the search to objects of the given type. Can be "item", "task", "file", "conversation", "profile" and "app"
          required: true
          type: string
        - name: search_fields
          in: query
          description: The list of fields to search in. Can f.ex. be used to limit the search to the "title" field.
          required: true
          type: string
      tags:
        - Search
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /search/space/{SpaceIdentifier}/:
    post:
      summary: Search in space
      description: Searches in all items, statuses and non-private tasks in the space. The objects will be returned sorted descending by the time the object had any update.
      parameters:
        - name: SpaceIdentifier
          in: path
          description: this is the unique id of the space
          required: true
          type: string
        - name: search_fields
          in: query
          description: The list of fields to search in. Can f.ex. be used to limit the search to the "title" field.
          required: true
          type: string
      tags:
        - Search
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /search/space/{SpaceIdentifier}/v2/:
    get:
      summary: Search in space v2
      description: Searches in all items, statuses and non-private tasks in the space. The objects will be returned sorted descending by the time the object had any update.
      parameters:
        - name: SpaceIdentifier
          in: path
          description: this is the unique id of the space
          required: true
          type: string
        - name: counts
          in: query
          description: If the counts for each type of object should be returned. 
          required: false
          type: string
        - name: highlights
          in: query
          description: If the highlights for each result should be returned
          required: false
          type: string
        - name: limit
          in: query
          description: The maximum number of results to return.  Default  20
          required: true
          type: string
        - name: offset
          in: query
          description: The offset into the results to return. Default  0
          required: true
          type: string
        - name: query
          in: query
          description: The text to search for.
          required: true
          type: string
        - name: ref_type
          in: query
          description: Restrict the search to objects of the given type. Can be "item", "task", "file", "conversation", "profile" and "app"
          required: true
          type: string
        - name: search_fields
          in: query
          description: The list of fields to search in. Can f.ex. be used to limit the search to the "title" field.
          required: true
          type: string
      tags:
        - Search
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /tag/{RefType}/{RefIdentifier}:
    post:
      summary: Create tag
      description: Adds additional tags to the object. If a tag with the same text is already present, the tag will be ignored. Existing tags on the object are preserved.
      operationId: addtag
      parameters:
        - name: RefType
          in: path
          description: reference type hook is attached to
          required: true
          type: string
        - name: RefIdentifier
          in: path
          description: reference id 
          required: true
          type: string
        - name: text
          in: query
          description: text of tag to be added
          required: true
          type: string
      tags:
        - Tag
      responses:
        200:
          description: tag Information
          schema:
            $ref: '#/definitions/tag'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update tag
      description: Updates the tag with the given id
      parameters:
        - name: RefType
          in: path
          description: reference type hook is attached to
          required: true
          type: string
        - name: RefIdentifier
          in: path
          description: reference id 
          required: true
          type: string
        - name: text
          in: query
          description: text of tag to be updated
          required: true
          type: string
      tags:
        - Tag
      responses:
        200:
          description: tag Information
          schema:
            $ref: '#/definitions/tag'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete tag 
      description: Deletes the tag with the given id. This will also end all memberships of the tag and cancel any tag invites still outstanding.
      parameters:
        - name: RefType
          in: path
          description: reference type hook is attached to
          required: true
          type: string
        - name: RefIdentifier
          in: path
          description: reference id 
          required: true
          type: string
        - name: text
          in: query
          description: text of tag to be removed
          required: true
          type: string
      tags:
        - Tag
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /tag/space/{SpaceIdentifier}/:
    get:
      summary: Returns the tags on the given space.
      description: Returns the tags on the given space. This includes both items and statuses. The tags are first limited ordered by their frequency of use, and then returned sorted alphabetically.
      parameters:
        - name: SpaceIdentifier
          in: path
          description: this is the unique id of the space the tags are in
          required: true
          type: string
        - name: limit
          in: query
          description: number of results
          required: false
          type: string
        - name: text
          in: query
          description: text of tag to find
          required: false
          type: string
      tags:
        - Tag
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /tag/space/{SpaceIdentifier}/search/:
    get:
      summary: Get objects on space with tag
      description: Returns the objects that are tagged with the given text on the space. The objects are returned sorted descending by the time the tag was added.
      parameters:
        - name: SpaceIdentifier
          in: path
          description: this is the unique id of the space the tags are in
          required: true
          type: string
        - name: text
          in: query
          description: text of tag to find
          required: false
          type: string
      tags:
        - Tag
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /tag/org/{OrgIdentifier}/:
    get:
      summary: Returns the tags on the given organization.
      description: Returns the tags on the given org. This includes both items and statuses on all spaces in the organization that the user is part of. The tags are first limited ordered by their frequency of use, and then returned sorted alphabetically.
      parameters:
        - name: OrgIdentifier
          in: path
          description: this is the unique id of the organization the tags are in
          required: true
          type: string
        - name: limit
          in: query
          description: number of results
          required: false
          type: string
        - name: text
          in: query
          description: text of tag to find
          required: false
          type: string
      tags:
        - Tag
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /tag/org/{OrgIdentifier}/search/:
    get:
      summary: Get objects on organization with tag
      description: Returns the objects that are tagged with the given text on the organization. The objects are returned sorted descending by the time the tag was added.
      parameters:
        - name: OrgIdentifier
          in: path
          description: this is the unique id of the organization the tags are in
          required: true
          type: string
        - name: text
          in: query
          description: text of tag to find
          required: false
          type: string
      tags:
        - Tag
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /tag/app/{AppIdentifier}/:
    get:
      summary: Returns the tags on the given application.
      description: Returns the tags on the given app. This includes only items. The tags are first limited ordered by their frequency of use, and then returned sorted alphabetically.
      parameters:
        - name: AppIdentifier
          in: path
          description: this is the unique id of the app the tags are in
          required: true
          type: string
        - name: limit
          in: query
          description: number of results
          required: false
          type: string
        - name: text
          in: query
          description: text of tag to find
          required: false
          type: string
      tags:
        - Tag
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /tag/app/{AppIdentifier}/search/:
    get:
      summary: Get objects on app with tag
      description: Returns the objects that are tagged with the given text on the app. The objects are returned sorted descending by the time the tag was added.
      parameters:
        - name: AppIdentifier
          in: path
          description: this is the unique id of the app the tags are in
          required: true
          type: string
        - name: text
          in: query
          description: text of tag to find
          required: false
          type: string
      tags:
        - Tag
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /tag/app/{AppIdentifier}/top/:
    get:
      summary: Returns the top tags on the app.
      description: Returns the top tags on the app.
      parameters:
        - name: AppIdentifier
          in: path
          description: this is the unique id of the app the tags are in
          required: true
          type: string
        - name: limit
          in: query
          description: number of results
          required: false
          type: string
        - name: text
          in: query
          description: text of tag to find
          required: false
          type: string
      tags:
        - Tag
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /task/:
    get:
      summary: get tasks
      description: Returns a list of all tasks matching the given filters and grouped by the specified group.
      operationId: addtask
      parameters:
        - name: due_date
          in: query
          description: overdue, today, tomorrow, upcoming or later
          required: false
          type: string
      tags:
        - Task
      responses:
        200:
          description: task Information
          schema:
            $ref: '#/definitions/task'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create task
      description: Add a new task to an organization
      operationId: createtask
      parameters:
        - name: task
          in: body
          description: task Information
          required: true
          schema:
            $ref: '#/definitions/task'
      tags:
        - Task
      responses:
        200:
          description: task Information
          schema:
            $ref: '#/definitions/task'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /task/{TaskIdentifier}:
    get:
      summary: Get task Information
      description: Get the task with the given id
      parameters:
        - name: TaskIdentifier
          in: path
          description: this is the unique id of the task
          required: true
          type: string
      tags:
        - Task
      responses:
        200:
          description: task Information
          schema:
            $ref: '#/definitions/task'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update task
      description: Updates the task with the given id
      parameters:
        - name: TaskIdentifier
          in: path
          description: Updates the task with the given attributes. Any attributes not specified will remain unchanged.
          required: true
          type: string
        - name: task
          in: body
          description: task Information
          required: true
          schema:
            $ref: '#/definitions/task'
      tags:
        - Task
      responses:
        200:
          description: task Information
          schema:
            $ref: '#/definitions/task'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete task 
      description: Deletes the task with the given id.
      parameters:
        - name: TaskIdentifier
          in: path
          description: unique identifier for the task
          required: true
          type: string
        - name: hook
          in: query
          description:  if hooks should be executed for the change or not 
          required: false
          type: string
        - name: silent
          in: query
          description: If set to "true", the object will not be bumped up in the stream and notifications will not be generated. 
          required: false
          type: string
      tags:
        - Task
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /task/label/:
    get:
      summary: Returns the users task labels.
      description: Returns the users task labels.
      operationId: gettask
      tags:
        - Task
      responses:
        200:
          description: task information
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create task label
      description: Add a new task label to an organization
      operationId: addtasklabel
      parameters:
        - name: text
          in: query
          description: The name of the new label
          required: true
          type: string
        - name: color
          in: query
          description: The color of the label in hex format (xxxxxx)
          required: true
          type: string
      tags:
        - Task
      responses:
        200:
          description: task label id
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /task/label/{LabelIdentifier}:
    get:
      summary: Get task label information
      description: Get the task with the given id
      parameters:
        - name: LabelIdentifier
          in: path
          description: this is the unique id of the task label
          required: true
          type: string
      tags:
        - Task
      responses:
        200:
          description: task label Information
          schema:
            $ref: '#/definitions/tasklabel'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update task label
      description: Updates the task label with the given id
      parameters:
        - name: LabelIdentifier
          in: path
          description: unique identifier of the task label
          required: true
          type: string
        - name: task
          in: body
          description: task Information
          required: true
          schema:
            $ref: '#/definitions/task'
      tags:
        - Task
      responses:
        200:
          description: task label information
          schema:
            $ref: '#/definitions/task'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete label 
      description: Deletes the label with the given id. This will remove the label from all tasks.
      parameters:
        - name: LabelIdentifier
          in: path
          description: unique identifier for the task label
          required: true
          type: string
      tags:
        - Task
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /task/{TaskIdentifier}/incomplete/:
    post:
      summary: Mark the completed task as no longer being completed.
      description: Mark the completed task as no longer being completed.
      parameters:
        - name: TaskIdentifier
          in: path
          description: this is the unique id of the task
          required: true
          type: string
      tags:
        - Task
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /task/{TaskIdentifier}/rank/:
    post:
      summary: Ranks the task in comparision to one or two other tasks.
      description: Ranks the task in comparision to one or two other tasks.
      parameters:
        - name: TaskIdentifier
          in: path
          description: this is the unique id of the task
          required: true
          type: string
        - name: after
          in: query
          description: The other task the updated task has to be after
          required: true
          type: string
        - name: before
          in: query
          description: The other task the updated task has to be before
          required: true
          type: string
      tags:
        - Task
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /task/{TaskIdentifier}/assign/:
    get:
      summary: Assigns the task to another user.
      description: Assigns the task to another user. This makes the user responsible for the task and its completion.
      parameters:
        - name: TaskIdentifier
          in: path
          description: this is the unique id of the task
          required: true
          type: string
        - name: responsible
          description: The contact responsible (user_id), or null if no one should be responsible
          in: query
          required: true
          type: string

      tags:
        - Task
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /task/{TaskIdentifier}/complete/:
    get:
      summary: Mark the given task as completed.
      description: Returns the available seats. A null value means there is an unlimited number of available seats.
      parameters:
        - name: TaskIdentifier
          in: path
          description: this is the unique id of the task
          required: true
          type: string
      tags:
        - Task
      responses:
        200:
          description: task Information
          schema:
            $ref: '#/definitions/task'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /task/summary/:
    get:
      summary: Returns the task summary for the active user
      description: Returns the task summary for the active user
      parameters:
        - name: limit
          in: query
          description: The maximum number of tasks to return in each group
          required: false
          type: string
      tags:
        - Task
      responses:
        200:
          description: task Information
          schema:
            $ref: '#/definitions/task'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /task/org/{OrgIdentifier}/summary/:
    get:
      summary: Returns the task summary for the organization for the active user
      description: Returns the task summary for the organization for the active user
      parameters:
        - name: OrgIdentifier
          in: path
          description: this is the unique id of the organization
          required: true
          type: string
      tags:
        - Task
      responses:
        200:
          description: task Information
          schema:
            $ref: '#/definitions/task'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /task/org/{OrgIdentifier}/available/:
    get:
      summary: Returns the available tasks
      description: Returns the available seats. A null value means there is an unlimited number of available seats.
      parameters:
        - name: OrgIdentifier
          in: path
          description: this is the unique id of the organization
          required: true
          type: string
      tags:
        - Task
      responses:
        200:
          description: task Information
          schema:
            $ref: '#/definitions/task'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /task/space/{SpaceIdentifier}/summary/:
    get:
      summary: Returns the task summary for the space 
      description: Returns the task summary for the space for 
      parameters:
        - name: SpaceIdentifier
          in: path
          description: this is the unique id of the organization
          required: true
          type: string
      tags:
        - Task
      responses:
        200:
          description: task Information
          schema:
            $ref: '#/definitions/task'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /task/{RefType}/{RefIdentifier}:
    get:
      summary: Get task Information
      description: Get the task with the given id
      parameters:
        - name: RefType
          in: path
          description: this is the unique id of the task
          required: true
          type: string
        - name: RefIdentifier
          in: path
          description: this is the unique id of the task
          required: true
          type: string
      tags:
        - Task
      responses:
        200:
          description: task Information
          schema:
            $ref: '#/definitions/task'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update task
      description: Updates the task with the given id
      parameters:
        - name: RefType
          in: path
          description: this is the unique id of the task
          required: true
          type: string
        - name: RefIdentifier
          in: path
          description: this is the unique id of the task
          required: true
          type: string
        - name: task
          in: body
          description: task Information
          required: true
          schema:
            $ref: '#/definitions/task'
      tags:
        - Task
      responses:
        200:
          description: task Information
          schema:
            $ref: '#/definitions/task'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete task 
      description: Deletes the task with the given id.
      parameters:
        - name: RefType
          in: path
          description: this is the unique id of the task
          required: true
          type: string
        - name: RefIdentifier
          in: path
          description: this is the unique id of the task
          required: true
          type: string
        - name: hook
          in: query
          description:  if hooks should be executed for the change or not 
          required: false
          type: string
        - name: silent
          in: query
          description: If set to "true", the object will not be bumped up in the stream and notifications will not be generated. 
          required: false
          type: string
      tags:
        - Task
      responses:
        200:
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Shares:
    type: object
    properties:
      ShareIdentifier:
        type: string
        description: Unique identifier representing a specific anonymous share
      AliasID:
        type: string
        description: When a Share is sent to multiple users, with RequireLogin or RequireUserInfo set, then a different Share Alias is created for each user. The email ShareFile sends to these users will contain different AliasIDs, allowing ShareFile to track the user activity on the share. For anonymous Shares, the AliasID will be the same as the Share ID.
      ShareType:
        type: string
        description: Either "Send" or "Request". Send Shares are used to Send files and folders to the specified users. Request shares are used to allow users to upload files to the share owner chosen location.
      Title:
        type: string
        description: Title of the share
      HasSentMessage:
        type: string
        description: Flag to indicate if ShareFile has sent email messages for this Share
      SentMessageTitle:
        type: string
        description: Subject of Share email message
      RequireLogin:
        type: boolean
        description: If True, only authenticated users can download files from this share.
      RequireUserInfo:
        type: boolean
        description: If True, users must provide Name, Email and Company information to download files from the share.
      Parent:
        $ref: '#/definitions/Items'
      Creator:
        $ref: '#/definitions/Users'
      User:
        $ref: '#/definitions/Users'
      Items:
        type: array
        items:
          $ref: '#/definitions/Items'
      CreationDate:
        type: string
        format: dateTime
        description: Date the share was created
      ExpirationDate:
        type: string
        format: dateTime
        description: Date the share expires
      MaxDownloads:
        type: integer
        format: int32
        description: Maximum number of downloads each user can perform.
      TotalDownloads:
        type: integer
        format: int32
        description: Total number of times a share has been downloaded by a user.
      IsViewOnly:
        type: boolean
        description: Used for Virtual Data Room accounts - indicates the files in the share can only be downloaded with an applied watermark.
      TrackUntilDate:
        type: string
        format: dateTime
        description: User activity on this share will be tracked up to this date.
      SendFrequency:
        type: integer
        format: int32
      SendInterval:
        type: integer
        format: int32
      LastDateSent:
        type: string
        format: dateTime
      IsConsumed:
        type: boolean
        description: Indicates whether or not this Share has been downloaded
      IsRead:
        type: boolean
        description: Indicates whether the contents of this share have been viewed by a valid, authenticated recipient
      IsArchived:
        type: boolean
      SendTool:
        type: string
      SendMethod:
        type: string
      UsesStreamIds:
        type: boolean
        description: When enabled the items are identified by stream IDs instead of item IDs. Applies to Send Shares only
      Uri:
        type: string
        description:	Uri to access the share through the Web portal
      Recipients:
        type: array
        items:
          $ref: '#/definitions/Recipients'
          description: List of users that have access to this share.
      Zone:
        $ref: '#/definitions/Zone'
      Signature:
        type: string	
        description: HMAC Signature for the Share data
      HasRemoteChildren:
        type: boolean
        description: Defines whether the request to retrieve Share Items is to be navigated to a remote endpoint.
      Redirection:
        type: string
        description:	Redirection endpoint for this Share.
  Users:
    type: object
    properties:
      UserIdentifier:
        type: string
        description: Unique identifier for the user
      Email:
        type: string
        description: email address
      FirstName:
        type: string
        description: first name of user
      LastName:
        type: string
        description: last name of user
      Company:
        type: string
        description: company name
      Password:
        type: string
        description: password
      userType:
        type: string
        description: client or employee user
  Groups:
    type: object
    properties:
      GroupIdentifier:
        type: string
        description: Unique Identifier for the group
      Name:
        type: string
        description: Name of the group
      IsShared:
        type: boolean
        description: shared group
      Users:
        type: array
        items:
          $ref: '#/definitions/Items' 
  AccessControls:
    type: object
    properties:
      Item:
        type: array
        items:
          $ref: '#/definitions/Item'
        description: File or Folder Id that was given permission through this rule
      Principal:
        type: array
        items:
          $ref: '#/definitions/Principal' 
        description: User or Group - that has been granted permissions through this rule
      CanUpload: 
        type: boolean
        description: Defines whether the principal can add files (upload) into the Item
      CanDownload: 
        type: boolean 
        description: Defines whether the principal can read file content (download) from this Item
      CanView:                                  
        type: boolean 
        description:  Defines whether the principal can view items (browse) from this Item
      CanDelete:                                     
        type: boolean 
        description:  Defines whether the principal can remove items from this Item
      CanManagePermissions:                                          
        type: boolean 
        description: Defines whether the principal can configure Access Controls in this Ite
      NotifyOnUpload:             
        type: boolean
        description: Defines the notification preference for upload events. If set, the principal will receive notifications when new files are uploaded into this Item
      NotifyOnDownload:                                                  
        type: boolean 
        description:  Defines the notification preference for download events. If set, the principal will receive notifiation when items are downloaded from this Item.
      IsOwner:
        type: boolean 
        description: Defines whether the principal is the owner of this Item
  UserPermissions:
    type: object
    properties:
      CanChangePassword:
        type: boolean 
        description: Can user change password
      CanManageMySettings:
        type: boolean 
        description: Can user change settings
      CanUseFileBox:
        type: boolean 
        description: Does the user have a filebox
      CanManageUsers:
        type: boolean 
        description: Can user manage other users
      CanCreateFolders:
        type: boolean 
        description: Can user create folders
      CanUseDropBox:
        type: boolean 
        description: Can the user use the drop box
  Files:
    type: object
    properties:
      FileIdentifier:
        type: string
        description: File or Folder Id
      FileCount: 
        type: string
        description: File or Folder Id
      Name: 
        type: string
        description: File or Folder Id
      Parent: 
        $ref: '#/definitions/Items'
      CreationDate:
        type: string
        description: File or Folder Id
      ProgenyEditDate: 
        type: string
        description: File or Folder Id
      ExpirationDate: 
        type: string
        description: File or Folder Id
      Description:
        type: string
        description: File or Folder Id
      CreatorFirstName:
        type: string
        description: File or Folder Id      
      CreatorLastName:
        type: string
        description: File or Folder Id      
      FileSizeBytes:
        type: string
        description: File or Folder Id      
      url: 
        type: string
        description: File or Folder Id  
  Items:
    type: object
    properties:
      FileIdentifier:
        type: string
        description: File or folder id
      url:
        type: string
        description: Unique api url for item
  Recipients:
    type: object
    properties:
      Id:
        type: string
      Email:
        type: string
      FirstName:
        type: string
      LastName:
        type: string
      Company:
        type: string
  Contacts:
    type: object
    properties:
      Id:
        type: string
      Email:
        type: string
  Zone:
    type: object
    properties: 
      Id:
        type: string
  Item:
    type: object
    properties: 
      Id:
        type: string
  Principal:
    type: object
    properties:
      Id:
        type: string
        description: User or Group Id
      Email:
        type: string
      url:
        type: string
  Space:
    type: object
    properties:
      org_id:
        type: string
        description: The id of the organization the space is in
      privacy:
        type: string
        description: The privacy level of the space, either "open" or "closed", defaults to "closed"
      auto_join:
        type: boolean
        description: True if new employees should be joined automatically, false otherwise, defaults to false
      name:
        type: string
        description: The name of the space
      post_on_new_app:
        type: boolean
        description: True if new apps should be announced with a status update, false otherwise
      post_on_new_member:
        type: boolean
        description: True if new members should be announced with a status update, false otherwise
  application:
    type: object
    properties:
      space_id:
        type: string
        description: The id of the organization the space is in
      config:
        $ref: '#/definitions/app_config'
        description: The privacy level of the space, either "open" or "closed", defaults to "closed"
      fields:
        type: array
        items:
          $ref: '#/definitions/Fields'
          description: fields for the application
          
  app_config:
    type: object
    properties:
      type: 
        type: string
        description: The type of the app, either "standard", "meeting" or "contact"
      name: 
        type: string
        description: The name of the app
      item_name: 
        type: string
        description: The name of each item in an app,
      description: 
        type: string
        description: The description of the app,
      usage: 
        type: string
        description: Description of how the app should be used,
      external_id: 
        type: string
        description: The external id of the app. This can be used to store an id from an external system on the app,
      icon: 
        type: string
        description: The name of the icon used to represent the app,
      allow_edit: 
        type: boolean
        description: True if other members are allowed to edit items from the app, false otherwise,
      default_view: 
        type: string
        description: The default view of the app items on the app main page (see area for more information),
      allow_attachments: 
        type: boolean
        description: True if attachment of files to an item is allowed, false otherwise,
      allow_comments: 
        type: boolean
        description: True if members can make comments on an item, false otherwise,
      silent_creates: 
        type: boolean
        description: True if item creates should not be posted to the stream, false otherwise,
      silent_edits: 
        type: boolean
        description: True if item edits should not be posted to the stream, false otherwise,
      fivestar: 
        type: boolean
        description: True if fivestar rating is enabled on an item, false otherwise,
      fivestar_label: 
        type: boolean
        description: If fivestar rating is enabled, this is the label that will be presented to the users,
      approved: 
        type: boolean
        description: True if an item can be approved, false otherwise,
      thumbs: 
        type: boolean
        description: True if an item can have a thumbs up or thumbs down, false otherwise,
      thumbs_label:
        type: boolean
        description: If thumbs ratings are enabled, this is the label that will be presented to the users,
      rsvp: 
        type: boolean
        description: True if RSVP is enabled, false otherwise,
      rsvp_label: 
        type: boolean
        description: If RSVP is enabled, this is the label that will be presented to the users,
      yesno: 
        type: boolean
        description: True if yes/no rating is enabled, false otherwise,
      yesno_label: 
        type: boolean
        description: If yes/no is enabled, this is the label that will be presented to the users
      tasks:
        type: array
        items:
          $ref: '#/definitions/task'
          description: The list of tasks to be automatically created when an item is created

    
  Fields:
    type: object
    properties:
      type: 
        type: string
        description: The type of the field (see area for more information)
      config:
        $ref: '#/definitions/field_config'
      
  
  field_config:
    type: object
    properties:
      label: 
        type: string
        description: The label of the field, which is what the users will see
      description: 
        type: string
        description: The description of the field, shown to the user when inserting and editing,
      delta: 
        type: integer
        description: An integer indicating the order of the field compared to other fields,
      settings: 
        $ref: '#/definitions/field_settings' 
        description: The settings of the field which depends on the type of the field (see area for more information),
      mapping: 
        type: string
        description: The mapping of the field, see available mappings above,
      required: 
        type: boolean
        description: True if the field is required when creating and editing items, false otherwise
  
  task:
    type: object
    properties:
      label: 
        type: string
        description: The label of the field, which is what the users will see
      description: 
        type: string
        description: The description of the field, shown to the user when inserting and editing,
      delta: 
        type: integer
        description: An integer indicating the order of the field compared to other fields,
      mapping: 
        type: string
        description: The mapping of the field, see available mappings above,
      required: 
        type: boolean
        description: True if the field is required when creating and editing items, false otherwise 
        
  field_settings:
    type: object
    properties:
      label: 
        type: string
        description: The label of the field, which is what the users will see
      description: 
        type: string
        description: The description of the field, shown to the user when inserting and editing,
      delta: 
        type: integer
        description: An integer indicating the order of the field compared to other fields,
      mapping: 
        type: string
        description: The mapping of the field, see available mappings above,
      required: 
        type: boolean
        description: True if the field is required when creating and editing items, false otherwise       
        
  comment:
    type: object
    properties:
      value: 
        type: string
        description: The comment to be made,
      external_id: 
        type: string
        description: The external id of the comment, if any,
      embed_id: 
        type: string
        description: The id of an embedded link that has been created with the Add an mebed operation in the Embed area,
      embed_url: 
        type: string
        description: The url to be attached
  hook:
    type: object
    properties:
      url: 
        type: string
        description: The url of endpoint
      type: 
        type: string
        description:  The type of events to listen to, see the documentation for options
  object:
    type: object
    properties:
      external_id: 
        type: string
        description: The new external_id of the item,
      fields: 
        type: string
        description: The values for each field, see the create item operation for details,
      tags: 
        type: string
        description: The list of tags
      reminder: 
        $ref: '#/definitions/reminder' 
        description: Optional reminder on this task
      recurrence: 
        $ref: '#/definitions/recurrence' 
        description: The recurrence for the task, if any,
      linked_account_id: 
        type: string
        description: The linked account to use for meetings,
      ref:
        $ref: '#/definitions/object_ref' 
        description: The settings of the field which depends on the type of the field (see area for more information),The reference of the item

  recurrence:
    type: object
    properties:
      name: 
        type: string
        description: The name of the recurrence, "weekly", "monthly" or "yearly"
      config: 
        $ref: '#/definitions/recurrence_config' 
        description: The configuration for the recurrence, depends on the type
      step: 
        type: integer
        description: The step size, 1 or more
      until: 
        type: string
        description: The latest date the recurrence should take place

  recurrence_config:
    type: object
    properties:
      days: 
        type: string
        description: List of weekdays ("monday", "tuesday", etc) (for "weekly")
      repeat_on: 
        type: string
        description: When to repeat, "day_of_week" or "day_of_month" (for "monthly")
  reminder:
    type: object
    properties:
      remind_delta: 
        type: integer
        description: Minutes (integer) to remind before the due date
    
  object_ref:
    type: object
    properties:
      type:
        type: string
        description: reference type
      id:
        type: string
        description: reference id
  search:
    type: object
    properties:
      query: 
        type: string
        description: The text to search for
      limit: 
        type: integer
        description: (optional) The number of results to return; up to 20 results are returned in one call.
      offset: 
        type: integer
        description: (optional) The rank of the first search result to return (default=0)
      ref_type: 
        type: string
        description: The type of objects to search for. Can be one of "item", "task", "conversation", "app", "status", "file" and  "profile"
  tag:
    type: object
    properties:
      text: 
        type: string
        description: The text of a tag to be added
  tasklabel:
    type: object
    properties:
      text: 
        type: string
        description: The name of the new label
      color: 
        type: string
        description: The color of the label in hex format (xxxxxx)        
    

  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string